# Generated by Django 4.2.3 on 2023-08-01 09:29

import backend.account.models.business
import backend.account.models.personal
import backend.account.models.user
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, choices=[('بغداد', 'بغداد'), ('البصرة', 'البصرة'), ('نينوى', 'نينوى'), ('ميسان', 'ميسان'), ('ذي قار', 'ذي قار'), ('المثنى', 'المثنى'), ('القادسية', 'القادسية'), ('النجف', 'النجف'), ('كربلاء', 'كربلاء'), ('واسط', 'واسط'), ('الأنبار', 'الأنبار'), ('ديالى', 'ديالى'), ('صلاح الدين', 'صلاح الدين'), ('السليمانية', 'السليمانية'), ('دهوك', 'دهوك'), ('أربيل', 'أربيل'), ('بابل', 'بابل'), ('التأميم', 'التأميم'), ('أخرى', 'أخرى')], max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_enabled', models.BooleanField(default=True)),
                ('is_canceled', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('restored_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extra', models.JSONField(blank=True, default=dict, null=True)),
                ('account_type', models.CharField(blank=True, choices=[('personal', 'Personal'), ('business', 'Business')], max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('phone_number2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('dob', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, choices=[('بغداد', 'بغداد'), ('البصرة', 'البصرة'), ('نينوى', 'نينوى'), ('ميسان', 'ميسان'), ('ذي قار', 'ذي قار'), ('المثنى', 'المثنى'), ('القادسية', 'القادسية'), ('النجف', 'النجف'), ('كربلاء', 'كربلاء'), ('واسط', 'واسط'), ('الأنبار', 'الأنبار'), ('ديالى', 'ديالى'), ('صلاح الدين', 'صلاح الدين'), ('السليمانية', 'السليمانية'), ('دهوك', 'دهوك'), ('أربيل', 'أربيل'), ('بابل', 'بابل'), ('التأميم', 'التأميم'), ('أخرى', 'أخرى')], max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='البريد الإلكتروني')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_address', to='account.address')),
                ('canceled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_canceled_by', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('restored_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_restored_by', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', backend.account.models.user.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAccount',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.user',),
            managers=[
                ('objects', backend.account.models.business.BusinessAccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.user',),
            managers=[
                ('objects', backend.account.models.personal.PersonalAccountManager()),
            ],
        ),
    ]
